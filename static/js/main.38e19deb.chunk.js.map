{"version":3,"sources":["components/Breakfast.js","components/Meals.js","components/Account.js","components/Welcome.js","components/Navbar.js","components/Kitchen.js","App.js","serviceWorker.js","index.js"],"names":["Breakfast","state","products","_this2","this","fetch","then","res","json","setState","console","log","_this3","react_default","a","createElement","className","map","item","index","key","type","onClick","props","addOrder","src","image","alt","food","price","Component","Meals","Foody","Drink","Extra","Account","numberTable","scope","orders","removeOrder","total","onSubmit","Welcome","react_router_dom","to","Navbar","placeholder","aria-label","value","noTable","onChange","getTableNumber","addNumberTable","table","Kitchen","App","event","_this","target","concat","Object","toConsumableArray","sumItemPrice","newTotal","filter","e","i","sendOrder","fetchPost","url","data","method","body","JSON","stringify","headers","Content-Type","response","catch","error","_this$state","basename","react_router","path","component","exact","render","src_components_Navbar","src_components_Breakfast","src_components_Account","src_components_Meals","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38e19deb.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n// import {menuBreakfast} from './menuBreakfast.json';\r\nimport './Breakfast.css';\r\n\r\n\r\nclass Breakfast extends Component{\r\n    state={\r\n       products:[],\r\n    }\r\n    \r\n    componentDidMount(){\r\n        fetch('/products/breakfast')\r\n        .then(res => res.json())\r\n        .then(products => {\r\n             this.setState({products: products.products}, () => console.log('Products fetched', products))\r\n        });\r\n    }\r\n  render(){\r\n     const {products} = this.state;\r\n     return(\r\n        <div className=\"col-md-8 breakfast-background\">\r\n            <h1 className=\"center\">¡Buenos días!</h1>\r\n            {products.map((item,index) =>\r\n                <div  key={index} className=\"btn-group mt-3\">\r\n                    <button \r\n                        type=\"button\"\r\n                        className=\"btn btn-default btn-md mt-4  brk-btn\"\r\n                        onClick = {()=>this.props.addOrder(item)}  \r\n                    > \r\n                        <div>\r\n                            <img className= \"icon-button\" src={item.image} alt=\"icon-btn1\"/>\r\n                             <span> <br/>{item.food} \r\n                                 {/* {item.Drink} \r\n                                 {item.Coffee}   */}\r\n                            </span>      \r\n                            <span> <br/> ${item.price} </span>\r\n\r\n                        </div>\r\n                    </button>  \r\n                </div>                   \r\n            )}\r\n        </div>\r\n     )\r\n\r\n }\r\n}\r\n\r\nexport default Breakfast;","import React, {Component} from 'react';\r\n// import {menuMeals} from './menuMeals.json'\r\nimport './Meals.css'\r\n\r\nclass Meals extends Component{\r\n    state={\r\n        products:[],\r\n     }\r\n     componentDidMount(){\r\n         fetch('/products/lunch')\r\n         .then(res => res.json())\r\n         .then(products => {\r\n              this.setState({products: products.products}, () => console.log('Products fetched', products))\r\n         });\r\n     }\r\n  render(){\r\n     const {products} = this.state;\r\n     return(\r\n        <div className=\"col-md-8 meals-background\">\r\n            <h1 className=\"center\">¡Buenas tardes!</h1>\r\n            {products.map((item,index) =>\r\n                <div className=\"btn-group p-0 \" key={index}>\r\n                    <button \r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary btn-md  meal-btn\"\r\n                        onClick = {()=>this.props.addOrder(item)}  \r\n                    > \r\n                        {/* <img className = \"card-img-top\" src={item.img} alt=\"Card image cap\"/> */}\r\n                        <div>\r\n                            <img className= \"icon-button\" src={item.image} alt=\"icon-btn\" />\r\n                             <span> <br/>{item.food} \r\n                                {item.Foody}\r\n                                 {item.Drink} \r\n                                 {item.Extra}  \r\n                            </span>      \r\n                            <span> <br/> ${item.price} </span>\r\n\r\n                        </div>\r\n                    </button>  \r\n                </div>                   \r\n            )}\r\n        </div>\r\n     )\r\n\r\n }\r\n}\r\n\r\nexport default Meals;\r\n","import React from 'react';\r\nimport './Account.css'\r\n\r\n\r\nconst Account = (props) => {\r\n    return(\r\n        <div className=\"col-md-4 account-background\" >\r\n             <h4> Mesa No {props.numberTable}</h4>\r\n                \r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        {/* <th scope=\"col\">Index</th> */}\r\n                    <th scope=\"col\">Producto</th>\r\n                    <th scope=\"col\">Precio</th>\r\n                    <th scope=\"col\">Eliminar</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.orders.map((item, index) =>\r\n                    <tr key={index}>\r\n                        <td>{item.food}</td>\r\n                        <td>${item.price}</td>\r\n                        <td><button className=\"btn btn-default btn-lg btn-border\"\r\n                                type=\"button\" \r\n                                onClick={()=> props.removeOrder(index)}>  \r\n                                <img className=\"icon-account\" src=\"https://i.ibb.co/JybpHmg/garbage-icon-png-3.png\" alt=\"icon-account\" /> \r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                    )}\r\n                    <tr>\r\n                        <td className=\"h5\">  TOTAL: </td>\r\n                        <td className=\"h5\"> ${props.total}</td>\r\n                        <td> <button type=\"button\" \r\n                            className=\"bt btn-primary kitchen-btn\"\r\n                            onClick={()=> props.onSubmit()}>\r\n                            Enviar a Cocina\r\n                            </button> \r\n                        </td>\r\n                    </tr>             \r\n                </tbody>\r\n            </table>\r\n            {/* <ul class=\"list-group\">\r\n                <li class=\"list-group-item\">Total: ${props.total}</li> \r\n            </ul>      */}\r\n\r\n\r\n            <div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    );  \r\n} //en arrowfunction quito this\r\n\r\nexport default Account;\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Welcome.css';\r\n\r\nconst Welcome = () =>{\r\n    return(\r\n        <div >\r\n            {/* <header>Bienvenido a</header>\r\n            <h1 className=\"burger-letter\">Burger Queen</h1> */}\r\n            <Link to=\"/Meseros\" className=\"waitresslink\"> Meseros </Link>\r\n            <Link to = \"/Cocina\"className=\"kitchenlink\"> Cocina </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Welcome;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Navbar.css';\r\n\r\nconst Navbar = (props) => {\r\n   return(\r\n    <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link className=\"navbar-brand welcome-letter\" to=\"/\">Burger Queen</Link>\r\n            <ul className=\"navbar-nav mr-auto mt-lg-0\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link ml-5\" to = \"/Meseros/Desayunos\"> Desayunos </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link ml-3\" to = \"/Meseros/Comidas\"> Comidas </Link>\r\n                </li>\r\n            </ul>\r\n           \r\n          \r\n            <form className=\"form-inline my-1\">\r\n                <div className=\"md-form form-sm my-0\">\r\n                    <input className=\"form-control form-control-sm mr-sm-2 mb-0\" \r\n                    type=\"number\" \r\n                    placeholder=\"Número de Mesa\" \r\n                    aria-label=\"Search\"\r\n                    value={props.noTable}\r\n                    onChange={props.getTableNumber}\r\n                    />\r\n                </div>\r\n                <button className=\"btn btn-success ok-btn\" type=\"button\"\r\n                onClick={()=> props.addNumberTable(props.table)}>\r\n                Ok\r\n                </button>\r\n            </form>\r\n                      \r\n        </nav>\r\n    </div> \r\n   )\r\n}\r\n\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Kitchen.css';\r\n\r\nclass Kitchen extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"kitchen-background\">\r\n                <h1 className=\"center\">Los pedidos de las mesas son </h1>\r\n                <p>solo los pedidos de los meseros son los que presentaran lo que quiero hacer, espero que el fondo se vea azulvioleta\r\n                </p>\r\n            \r\n            <Link to = \"/\" >Burger Queen</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Kitchen;","import React, {Component} from 'react';\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport Breakfast from './components/Breakfast';\r\nimport Meals from './components/Meals';\r\nimport Account from './components/Account';\r\nimport Welcome from './components/Welcome';\r\nimport Navbar from './components/Navbar';\r\nimport Kitchen from './components/Kitchen';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n    state = {\r\n        noTable:'',\r\n        orders: [],\r\n        numberTable:'',\r\n        total: 0,        \r\n    };\r\n\r\ngetTableNumber = (event) =>{\r\n        this.setState({\r\n          noTable: event.target.value\r\n        });\r\n}\r\n\r\naddNumberTable = (numberTable) =>{\r\n    //console.log(numberTable)\r\n    this.setState({\r\n     numberTable:numberTable\r\n   })\r\n}\r\n\r\naddOrder = (item) => {\r\n    this.setState({orders: [...this.state.orders, item]}, () => {\r\n        this.sumItemPrice(item.price)\r\n        console.log(this.state.orders)})\r\n}\r\n\r\nsumItemPrice =(price) =>{\r\nthis.setState({total: this.state.total + price})\r\n}\r\n\r\nremoveOrder = (index) => {\r\n    let newTotal= (this.state.orders[index].price);\r\n     this.setState({orders: this.state.orders.filter((e,i)=> {return i !== index}, console.log(this.state.orders)),\r\n                    total: this.state.total - newTotal})\r\n }\r\n\r\nonSubmit = () => {\r\n    const url = \"/orders\";\r\n    const sendOrder = {\r\n        \"table\": this.state.numberTable,\r\n        \"products\": this.state.orders\r\n        // \"status\": 'send'\r\n    }\r\n    this.fetchPost(url, sendOrder);\r\n}\r\n\r\nfetchPost = (url,data) =>{\r\n    fetch(url,{\r\n        method:'post',\r\n        body: JSON.stringify(data),\r\n\t\t\theaders:{\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n        })\r\n        .then(res => res.json())\r\n\t\t.then(response => console.log('status de respuesta', JSON.stringify(response)))\r\n\t\t.catch(error => console.log('Error ', error)); \r\n}\r\n\r\nrender(){\r\nconst {noTable,orders,numberTable,total} =this.state; \r\n    return(\r\n        <HashRouter basename=\"/\">\r\n            <div>      \r\n                <Route path = \"/\" component = {Welcome} exact />\r\n\r\n                <Route path=\"/Cocina\" component = {Kitchen} />\r\n\r\n                <Route path = \"/Meseros\" render = {() => <Navbar \r\n                    table = {noTable}\r\n                    getTableNumber={this.getTableNumber}\r\n                    addNumberTable = {this.addNumberTable}\r\n                    /> } \r\n                />\r\n\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                <Route path = \"/Meseros/Desayunos\" render = {() => <Breakfast \r\n                    addOrder = {this.addOrder}\r\n                    /> } \r\n                />\r\n                <Route path = \"/Meseros/Desayunos\" render = {() => <Account \r\n                    orders={orders}\r\n                    numberTable={numberTable}\r\n                    total = {total}\r\n                    removeOrder={this.removeOrder}\r\n                    onSubmit = {this.onSubmit}\r\n                    /> } \r\n                />      \r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                <Route path = \"/Meseros/Comidas\" render = {() => <Meals \r\n                    addOrder = {this.addOrder}\r\n                    /> } \r\n                />\r\n                <Route path = \"/Meseros/Comidas\" render = {() => <Account \r\n                    orders={orders}\r\n                    numberTable={numberTable}\r\n                    total = {total}\r\n                    removeOrder={this.removeOrder}\r\n                    onSubmit = {this.onSubmit}\r\n                    /> } \r\n                />\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n        </HashRouter>    \r\n    );\r\n}\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}