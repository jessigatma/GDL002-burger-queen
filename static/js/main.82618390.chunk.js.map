{"version":3,"sources":["components/Breakfast.js","components/Meals.js","components/Account.js","components/Welcome.js","components/Navbar.js","components/Kitchen.js","App.js","serviceWorker.js","index.js"],"names":["Breakfast","state","products","_this2","this","fetch","then","res","json","setState","console","log","_this3","react_default","a","createElement","className","map","item","index","key","type","onClick","props","addOrder","src","image","alt","food","price","Component","Meals","Foody","Drink","Extra","Account","numberTable","scope","orders","removeOrder","total","onSubmit","Welcome","react_router_dom","to","Navbar","placeholder","aria-label","value","noTable","onChange","getTableNumber","addNumberTable","table","Kitchen","cashOrders","cashOrder","item1","i","App","event","_this","target","concat","Object","toConsumableArray","sumItemPrice","newTotal","filter","e","sendOrder","fetchPost","url","data","method","headers","Content-Type","body","JSON","stringify","response","catch","error","_this$state","basename","react_router","path","component","exact","render","src_components_Navbar","src_components_Breakfast","src_components_Account","src_components_Meals","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.82618390.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Breakfast.css';\r\n\r\nclass Breakfast extends Component {\r\n  state = {\r\n    products: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      'https://gdl002-burger-queen-backend.jessgatma.now.sh/products/breakfast'\r\n    )\r\n      .then(res => res.json())\r\n      .then(products => {\r\n        this.setState({ products: products.products }, () =>\r\n          console.log('Products fetched', products)\r\n        );\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { products } = this.state;\r\n    return (\r\n      <div className=\"col-md-8 breakfast-background\">\r\n        <h1 className=\"center\">¡Buenos días!</h1>\r\n        {products.map((item, index) => (\r\n          <div key={index} className=\"btn-group mt-3\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-default btn-md mt-4  brk-btn\"\r\n              onClick={() => this.props.addOrder(item)}\r\n            >\r\n              <div>\r\n                <img className=\"icon-button\" src={item.image} alt=\"icon-btn1\" />\r\n                <span>\r\n                  {' '}\r\n                  <br />\r\n                  {item.food}\r\n                  {/* {item.Drink} \r\n                                 {item.Coffee}   */}\r\n                </span>\r\n                <span>\r\n                  {' '}\r\n                  <br /> ${item.price}{' '}\r\n                </span>\r\n              </div>\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Breakfast;\r\n","import React, { Component } from 'react';\r\nimport './Meals.css';\r\n\r\nclass Meals extends Component {\r\n  state = {\r\n    products: []\r\n  };\r\n  componentDidMount() {\r\n    fetch('https://gdl002-burger-queen-backend.jessgatma.now.sh/products/lunch')\r\n      .then(res => res.json())\r\n      .then(products => {\r\n        this.setState({ products: products.products }, () =>\r\n          console.log('Products fetched', products)\r\n        );\r\n      });\r\n  }\r\n  render() {\r\n    const { products } = this.state;\r\n    return (\r\n      <div className=\"col-md-8 meals-background\">\r\n        <h1 className=\"center\">¡Buenas tardes!</h1>\r\n        {products.map((item, index) => (\r\n          <div className=\"btn-group p-0 \" key={index}>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-default btn-md mt-4 meal-btn\"\r\n              onClick={() => this.props.addOrder(item)}\r\n            >\r\n              {/* <img className = \"card-img-top\" src={item.img} alt=\"Card image cap\"/> */}\r\n              <div>\r\n                <img className=\"icon-button\" src={item.image} alt=\"icon-btn\" />\r\n                <span>\r\n                  {' '}\r\n                  <br />\r\n                  {item.food}\r\n                  {item.Foody}\r\n                  {item.Drink}\r\n                  {item.Extra}\r\n                </span>\r\n                <span>\r\n                  {' '}\r\n                  <br /> ${item.price}{' '}\r\n                </span>\r\n              </div>\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Meals;\r\n","import React from 'react';\r\nimport './Account.css'\r\n\r\n\r\nconst Account = (props) => {\r\n    return(\r\n        <div className=\"col-md-4 account-background\" >\r\n             <h4> Mesa No {props.numberTable}</h4>\r\n                \r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        {/* <th scope=\"col\">Index</th> */}\r\n                    <th scope=\"col\">Producto</th>\r\n                    <th scope=\"col\">Precio</th>\r\n                    <th scope=\"col\">Eliminar</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.orders.map((item, index) =>\r\n                    <tr key={index}>\r\n                        <td>{item.food}</td>\r\n                        <td>${item.price}</td>\r\n                        <td><button className=\"btn btn-default btn-lg btn-border\"\r\n                                type=\"button\" \r\n                                onClick={()=> props.removeOrder(index)}>  \r\n                                <img className=\"icon-account\" src=\"https://i.ibb.co/JybpHmg/garbage-icon-png-3.png\" alt=\"icon-account\" /> \r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                    )}\r\n                    <tr>\r\n                        <td className=\"h5\">  TOTAL: </td>\r\n                        <td className=\"h5\"> ${props.total}</td>\r\n                        <td> <button type=\"button\" \r\n                            className=\"bt btn-primary kitchen-btn\"\r\n                            onClick={()=> props.onSubmit()}>\r\n                            Enviar a Cocina\r\n                            </button> \r\n                        </td>\r\n                    </tr>             \r\n                </tbody>\r\n            </table>\r\n\r\n            <div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    );  \r\n} //en arrowfunction quito this\r\n\r\nexport default Account;\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Welcome.css';\r\n\r\nconst Welcome = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"burger-letter\">Burger Queen</h1>\r\n\r\n      <button type=\"button\" className=\"button-welcome btn-waitress\">\r\n        <Link to=\"/Meseros\" className=\"link\">\r\n          {' '}\r\n          Meseros{' '}\r\n        </Link>\r\n      </button>\r\n\r\n      <button type=\"button\" className=\"button-welcome btn-kitchen\">\r\n        <Link to=\"/Cocina\" className=\"link\">\r\n          {' '}\r\n          Cocina{' '}\r\n        </Link>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = props => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link className=\"navbar-brand welcome-letter\" to=\"/\">\r\n          Burger Queen\r\n        </Link>\r\n        <ul className=\"navbar-nav mr-auto mt-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link ml-5\" to=\"/Meseros/Desayunos\">\r\n              {' '}\r\n              Desayunos{' '}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link ml-3\" to=\"/Meseros/Comidas\">\r\n              {' '}\r\n              Comidas{' '}\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <form className=\"form-inline my-1\">\r\n          <div className=\"md-form form-sm my-0\">\r\n            <input\r\n              className=\"form-control form-control-sm mr-sm-2 mb-0\"\r\n              type=\"number\"\r\n              placeholder=\"Número de Mesa\"\r\n              aria-label=\"Search\"\r\n              value={props.noTable}\r\n              onChange={props.getTableNumber}\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"btn btn-success ok-btn\"\r\n            type=\"button\"\r\n            onClick={() => props.addNumberTable(props.table)}\r\n          >\r\n            Ok\r\n          </button>\r\n        </form>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Kitchen.css';\r\n\r\nclass Kitchen extends Component {\r\n  state = {\r\n    cashOrders: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('https://gdl002-burger-queen-backend.jessgatma.now.sh/orders')\r\n      .then(res => res.json())\r\n      .then(cashOrders => {\r\n        this.setState({ cashOrders: cashOrders.orders }, () =>\r\n          console.log('Products fetched', cashOrders)\r\n        );\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { cashOrders } = this.state;\r\n    return (\r\n      <div className=\"kitchen-background\">\r\n        <h1>Los pedidos de las mesas son </h1>\r\n        <div className=\"container\">\r\n          {cashOrders.map((item, index) => (\r\n            <div key={index} className=\"square\">\r\n              <h3>Mesa:{item.table}</h3>\r\n              {/* <p>{item.dated}</p>{' '} */}\r\n              {item.cashOrder.map((item1, i) => (\r\n                <div key={i}>{item1.food}</div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <Link to=\"/\">Burger Queen</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Kitchen;\r\n","import React, { Component } from 'react';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport Breakfast from './components/Breakfast';\r\nimport Meals from './components/Meals';\r\nimport Account from './components/Account';\r\nimport Welcome from './components/Welcome';\r\nimport Navbar from './components/Navbar';\r\nimport Kitchen from './components/Kitchen';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    noTable: '',\r\n    orders: [],\r\n    numberTable: '',\r\n    total: 0\r\n  };\r\n\r\n  getTableNumber = event => {\r\n    this.setState({\r\n      noTable: event.target.value\r\n    });\r\n  };\r\n\r\n  addNumberTable = numberTable => {\r\n    //console.log(numberTable)\r\n    this.setState({\r\n      numberTable: numberTable\r\n    });\r\n  };\r\n\r\n  addOrder = item => {\r\n    this.setState({ orders: [...this.state.orders, item] }, () => {\r\n      this.sumItemPrice(item.price);\r\n      console.log(this.state.orders);\r\n    });\r\n  };\r\n\r\n  sumItemPrice = price => {\r\n    this.setState({ total: this.state.total + price });\r\n  };\r\n\r\n  removeOrder = index => {\r\n    let newTotal = this.state.orders[index].price;\r\n    this.setState({\r\n      orders: this.state.orders.filter((e, i) => {\r\n        return i !== index;\r\n      }, console.log(this.state.orders)),\r\n      total: this.state.total - newTotal\r\n    });\r\n  };\r\n\r\n  onSubmit = () => {\r\n    const url = 'https://gdl002-burger-queen-backend.jessgatma.now.sh/orders';\r\n    const sendOrder = {\r\n      table: this.state.numberTable,\r\n      cashOrder: this.state.orders\r\n      // \"status\": 'send'\r\n    };\r\n    this.fetchPost(url, sendOrder);\r\n  };\r\n\r\n  fetchPost = (url, data) => {\r\n    fetch(url, {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(res => res.json())\r\n      .then(response =>\r\n        console.log('status de respuesta', JSON.stringify(response))\r\n      )\r\n      .catch(error => console.log('Error ', error));\r\n  };\r\n\r\n  render() {\r\n    const { noTable, orders, numberTable, total } = this.state;\r\n    return (\r\n      <HashRouter basename=\"/\">\r\n        <div>\r\n          <Route path=\"/\" component={Welcome} exact />\r\n\r\n          <Route path=\"/Cocina\" component={Kitchen} />\r\n\r\n          <Route\r\n            path=\"/Meseros\"\r\n            render={() => (\r\n              <Navbar\r\n                table={noTable}\r\n                getTableNumber={this.getTableNumber}\r\n                addNumberTable={this.addNumberTable}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <Route\r\n                path=\"/Meseros/Desayunos\"\r\n                render={() => <Breakfast addOrder={this.addOrder} />}\r\n              />\r\n              <Route\r\n                path=\"/Meseros/Desayunos\"\r\n                render={() => (\r\n                  <Account\r\n                    orders={orders}\r\n                    numberTable={numberTable}\r\n                    total={total}\r\n                    removeOrder={this.removeOrder}\r\n                    onSubmit={this.onSubmit}\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <Route\r\n                path=\"/Meseros/Comidas\"\r\n                render={() => <Meals addOrder={this.addOrder} />}\r\n              />\r\n              <Route\r\n                path=\"/Meseros/Comidas\"\r\n                render={() => (\r\n                  <Account\r\n                    orders={orders}\r\n                    numberTable={numberTable}\r\n                    total={total}\r\n                    removeOrder={this.removeOrder}\r\n                    onSubmit={this.onSubmit}\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}